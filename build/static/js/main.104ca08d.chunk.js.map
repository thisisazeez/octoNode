{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","Notification","message","services_notes","axios","get","then","response","data","newObject","post","id","put","concat","Footer","style","color","fontStyle","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","components_Notification","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","value","onChange","target","type","App_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.104ca08d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important \n    ? 'make not important' \n    : 'make important';\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react' \nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport noteService from './services/notes'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science 2019</em>\n    </div> \n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll().then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(changedNote).then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(`muistiinpano '${note.content}' on jo valitettavasti poistettu palvelimelta`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    }\n\n    noteService\n      .create(noteObject).then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  )\n\n  return (\n    <div>\n      <h1>Muistiinpanot</h1>\n\n      <Notification message={errorMessage} />\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          n채yt채 {showAll ? 'vain t채rke채t' : 'kaikki'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">tallenna</button>\n      </form>    \n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}